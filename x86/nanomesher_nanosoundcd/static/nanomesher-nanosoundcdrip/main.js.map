{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#block_container {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n<div class=\\\"form-group\\\">\\r\\n<div class=\\\"position-absolute container\\\" style=\\\"left: 0; z-index:10\\\">\\r\\n   \\r\\n  <div class=\\\"row justify-content-center\\\" layout-align=\\\"center center\\\">\\r\\n    \\r\\n    <div class=\\\"col-sm-10 col-md-8 col-lg-6 col-xl-5 \\\">\\r\\n\\r\\n        <a href=\\\"/\\\"><img  width=\\\"200\\\" height=\\\"32\\\" src=\\\"assets/img/nanoplayer.png\\\" class=\\\"custom-logo\\\" alt=\\\"Nanomesher\\\" itemprop=\\\"logo\\\" /></a>\\r\\n        <div id=\\\"block_container\\\">\\r\\n        <button  (click)=\\\"startrip()\\\"><img src=\\\"assets/img/Extract_5040.png\\\"/></button>\\r\\n        <div *ngIf=\\\"isplaying || ispaused\\\">\\r\\n          <button  (click)=\\\"prev()\\\"><img src=\\\"assets/img/Prev_5040.png\\\"/></button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!(isplaying || ispaused)\\\">\\r\\n          <button  (click)=\\\"prev()\\\"><img src=\\\"assets/img/Prev_grey_5040.png\\\"/></button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"isplaying || ispaused\\\">\\r\\n          <button (click)=\\\"stop()\\\"><img src=\\\"assets/img/Stop_5040.png\\\"/></button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isplaying && !ispaused\\\">\\r\\n          <button (click)=\\\"playall()\\\"><img src=\\\"assets/img/playall_5040.png\\\"/></button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"isplaying || ispaused\\\">\\r\\n          <button  (click)=\\\"toggleplay()\\\"><img src=\\\"assets/img/pause_5040.png\\\"/></button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!(isplaying || ispaused)\\\">\\r\\n          <button><img src=\\\"assets/img/pause_grey_5040.png\\\"/></button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"isplaying || ispaused\\\">\\r\\n          <button  (click)=\\\"next()\\\"><img src=\\\"assets/img/Next_5040.png\\\"/></button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!(isplaying || ispaused)\\\">\\r\\n          <button  (click)=\\\"next()\\\"><img src=\\\"assets/img/Next_grey_5040.png\\\"/></button>\\r\\n        </div>\\r\\n       </div>\\r\\n         \\r\\n      <br><h5 style=\\\"color:blue\\\">{{ status }}</h5>\\r\\n      <h5 style=\\\"color:purple\\\">{{ artist }}</h5>\\r\\n\\r\\n      <div class=\\\"list-group\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\"\\r\\n        formArrayName=\\\"songs\\\" *ngFor=\\\"let song of form.controls.songs.controls; let i = index\\\">\\r\\n            <div class=\\\"media\\\">\\r\\n              <div class=\\\"checkbox\\\"><input  type=\\\"checkbox\\\" [formControlName]=\\\"i\\\"></div>\\r\\n              <div class=\\\"media-body align-self-center\\\">\\r\\n                <div *ngIf=\\\"playingtrackno==i+1\\\">\\r\\n                  <strong><h6 style=\\\"color:blue\\\">\\r\\n                      {{songs[i].track_name}} - {{songs[i].artist_name}}<p [ngStyle]=\\\"{ 'color': 'red' }\\\">{{songs[i].ripremain}}</p>\\r\\n                    </h6></strong>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"playingtrackno!=i+1\\\"><h6>\\r\\n                       {{songs[i].track_name}} - {{songs[i].artist_name}}<p [ngStyle]=\\\"{ 'color': 'red' }\\\">{{songs[i].ripremain}}</p>\\r\\n                      </h6>\\r\\n                </div>\\r\\n              </div><!-- media body -->\\r\\n            </div><!-- media -->\\r\\n        </a><!-- link -->\\r\\n      </div><!-- list-group -->\\r\\n    </div><!-- col -->\\r\\n  </div><!-- row -->\\r\\n</div><!-- container -->\\r\\n</div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, ReactiveFormsModule ,FormGroup, FormArray, FormControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable,timer } from 'rxjs';\r\nimport { debug } from 'util';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'CDRipApp';\r\n  status = \"\";\r\n  artist = \"\";\r\n  songs:any;\r\n  form: FormGroup;\r\n  pollingStatus: any;\r\n  obs1: any;\r\n  obs2: any;\r\n  isplaying: any;\r\n  ispaused: any;\r\n  playingtrackno:0;\r\n  //httpprev = 'http://volumio.local:5002'\r\n  httpprev = ''\r\n\r\n  constructor(private http: HttpClient, private formBuilder: FormBuilder){\r\n    this.songs = []\r\n    \r\n    const controls = this.songs.map(c => new FormControl(false));\r\n      this.form = this.formBuilder.group({\r\n        songs: new FormArray(controls)\r\n      });\r\n\r\n    this.http.get(this.httpprev + '/cdmeta2').subscribe(data => {\r\n      console.log(data);\r\n      this.songs = data;\r\n      const controls = this.songs.map(c => new FormControl(true));\r\n      this.form = this.formBuilder.group({\r\n        songs: new FormArray(controls)\r\n      });\r\n    });\r\n\r\n   \r\n  \r\n  }\r\n\r\n  tickall() {\r\n    \r\n    for (let song of this.songs) {\r\n      song.ripremain = \"\"\r\n    }\r\n\r\n  }\r\n\r\n  startrip() {\r\n    const selectedSongIds = this.form.value.songs\r\n      .map((v, i) => v ? this.songs[i].track_number : null)\r\n      .filter(v => v !== null);\r\n\r\n    console.log(selectedSongIds)\r\n\r\n    for (let song of this.songs) {\r\n        song.ripremain = \"\"\r\n    }\r\n\r\n    this.http.post(this.httpprev +'/rip2',selectedSongIds).subscribe(data => {\r\n      this.status=\"Extracting...\"\r\n      this.artist=\"\"\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    //this.obs1 = timer(0,5000).subscribe(x => this.refreshripstatus())    \r\n    this.obs2 = timer(0,1000).subscribe(x => this.refreshbothstatus())  \r\n    \r\n  }\r\n\r\n  displaystatus(response): void{\r\n    if(response[\"status\"] == \"ERROR\")\r\n    {\r\n      this.status = \"\";\r\n    }\r\n    else\r\n    {\r\n      this.status = \"00:00 \" + response[\"track_name\"]\r\n      this.artist = response[\"artist_name\"]\r\n    }\r\n\r\n  }\r\n\r\n  next(): void {\r\n    this.http.get(this.httpprev +'/next2').subscribe(data => {\r\n      this.displaystatus(data);     \r\n    })\r\n  }\r\n\r\n  stop(): void {\r\n    this.http.get(this.httpprev +'/stop2').subscribe(data => {\r\n      this.displaystatus(data);\r\n    })\r\n  }\r\n  \r\n  prev(): void {\r\n    this.http.get(this.httpprev +'/prev2').subscribe(data => {\r\n      this.displaystatus(data);\r\n    })\r\n  }\r\n\r\n  playall(): void {\r\n    this.http.get(this.httpprev +'/playall2').subscribe(data => {\r\n      this.displaystatus(data);\r\n    })\r\n  }\r\n\r\n  toggleplay(): void {\r\n    this.http.get(this.httpprev +'/playtoggle2').subscribe(data => {\r\n      this.displaystatus(data);\r\n    })\r\n  }\r\n\r\n  str_pad_left(string,pad,length):string {\r\n    return (new Array(length+1).join(pad)+string).slice(-length);\r\n  }\r\n\r\n  refreshbothstatus(): void {\r\n    this.http.get(this.httpprev +'/progress').subscribe(data => {\r\n      var playingdata = data['playing']\r\n      var ripdata = data['ripping']\r\n\r\n\r\n      for (var key in ripdata) {\r\n        for (let song of this.songs) {\r\n          if(song.track_number == key)\r\n              song.ripremain = (ripdata[key]) * 100 + \"% done\"\r\n          }\r\n      }\r\n\r\n      if((playingdata['status'] == \"State.Playing\") || (playingdata['status'] == \"State.Paused\"))\r\n      {\r\n        var playprogress = playingdata['playprogress']\r\n        var minutes = Math.floor(playprogress / 60);\r\n        var seconds = playprogress - minutes * 60;\r\n        this.status = this.str_pad_left(minutes,'0',2)+':'+this.str_pad_left(seconds,'0',2) + \" \" + playingdata['track_name']\r\n        this.artist = playingdata['artist_name']\r\n        this.playingtrackno = playingdata['track_number'];\r\n\r\n        if(playingdata['status'] == \"State.Playing\")\r\n        {\r\n          this.isplaying = true;\r\n          this.ispaused = false; \r\n        }\r\n        else\r\n        {\r\n          this.isplaying = false;\r\n          this.ispaused = true; \r\n        }\r\n      }\r\n\r\n      if(playingdata['status'] == \"State.Stopped\" )\r\n      {\r\n        this.isplaying = false;\r\n        this.ispaused = false; \r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n\r\n  refreshripstatus(): void {\r\n    this.http.get(this.httpprev +'/ripprogress').subscribe(data => {\r\n      \r\n      for (var key in data) {\r\n        for (let song of this.songs) {\r\n          if(song.track_number == key)\r\n              song.ripremain = (data[key]) * 100 + \"% done\"\r\n          }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}